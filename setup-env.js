#!/usr/bin/env node

/**
 * PacMac Mobile Environment Setup Script
 * 
 * This script helps you set up your environment variables for both
 * local development and production deployment on Render.
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

console.log('üöÄ PacMac Mobile Environment Setup\n');

// Check if .env.local already exists
const envPath = path.join(process.cwd(), '.env.local');
const envExists = fs.existsSync(envPath);

if (envExists) {
  console.log('‚ö†Ô∏è  .env.local already exists!');
  rl.question('Do you want to overwrite it? (y/N): ', (answer) => {
    if (answer.toLowerCase() === 'y' || answer.toLowerCase() === 'yes') {
      setupEnvironment();
    } else {
      console.log('Setup cancelled.');
      rl.close();
    }
  });
} else {
  setupEnvironment();
}

function setupEnvironment() {
  console.log('\nüìù Let\'s set up your environment variables!\n');
  
  const questions = [
    {
      key: 'GOOGLE_CLIENT_ID',
      prompt: 'Enter your Google OAuth Client ID: ',
      required: true,
      help: 'Get this from https://console.cloud.google.com/ ‚Üí APIs & Services ‚Üí Credentials'
    },
    {
      key: 'GOOGLE_CLIENT_SECRET',
      prompt: 'Enter your Google OAuth Client Secret: ',
      required: true,
      help: 'Get this from the same place as Client ID'
    },
    {
      key: 'NEXT_PUBLIC_APP_URL',
      prompt: 'Enter your app URL (http://localhost:3000 for dev, https://www.pacmacmobile.com for prod): ',
      required: true,
      default: 'http://localhost:3000'
    },
    {
      key: 'DATABASE_URL',
      prompt: 'Enter your database URL (file:./dev.db for local): ',
      required: false,
      default: 'file:./dev.db'
    },
    {
      key: 'STRIPE_PUBLISHABLE_KEY',
      prompt: 'Enter your Stripe Publishable Key (optional): ',
      required: false,
      help: 'Get this from https://dashboard.stripe.com/apikeys'
    },
    {
      key: 'STRIPE_SECRET_KEY',
      prompt: 'Enter your Stripe Secret Key (optional): ',
      required: false,
      help: 'Get this from the same Stripe dashboard'
    }
  ];

  const envVars = {};
  let currentQuestion = 0;

  function askQuestion() {
    if (currentQuestion >= questions.length) {
      createEnvFile();
      return;
    }

    const question = questions[currentQuestion];
    
    if (question.help) {
      console.log(`üí° ${question.help}`);
    }
    
    const prompt = question.default ? 
      `${question.prompt} (default: ${question.default}): ` : 
      question.prompt;

    rl.question(prompt, (answer) => {
      const value = answer.trim() || question.default || '';
      
      if (question.required && !value) {
        console.log('‚ùå This field is required!');
        askQuestion();
        return;
      }
      
      if (value) {
        envVars[question.key] = value;
      }
      
      currentQuestion++;
      askQuestion();
    });
  }

  function createEnvFile() {
    console.log('\nüìÑ Creating .env.local file...\n');
    
    let envContent = '# PacMac Mobile Environment Variables\n';
    envContent += '# Generated by setup-env.js\n\n';
    
    // Add the collected variables
    Object.entries(envVars).forEach(([key, value]) => {
      envContent += `${key}=${value}\n`;
    });
    
    // Add NEXT_PUBLIC_GOOGLE_CLIENT_ID (same as GOOGLE_CLIENT_ID)
    if (envVars.GOOGLE_CLIENT_ID) {
      envContent += `NEXT_PUBLIC_GOOGLE_CLIENT_ID=${envVars.GOOGLE_CLIENT_ID}\n`;
    }
    
    // Add some helpful comments
    envContent += '\n# Additional variables you might need:\n';
    envContent += '# STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret\n';
    envContent += '# NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co\n';
    envContent += '# NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key\n';
    
    try {
      fs.writeFileSync(envPath, envContent);
      console.log('‚úÖ .env.local file created successfully!');
      console.log('\nüìã Next steps:');
      console.log('1. Run: npm run dev');
      console.log('2. Visit: http://localhost:3000');
      console.log('3. Test the Google OAuth flow');
      console.log('\nüåê For production deployment:');
      console.log('1. Go to your Render dashboard');
      console.log('2. Add these environment variables to your service');
      console.log('3. Make sure to use production URLs (https://www.pacmacmobile.com)');
      console.log('\nüìö For more help, see: env.sample');
    } catch (error) {
      console.error('‚ùå Error creating .env.local:', error.message);
    }
    
    rl.close();
  }

  askQuestion();
}
