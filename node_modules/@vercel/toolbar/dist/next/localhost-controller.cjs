"use client";
"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _chunkKXA2ARXVcjs = require('./chunk-KXA2ARXV.cjs');var _react = require('react');var o,s;function v(e){typeof window>"u"||typeof EventSource>"u"||!e||s||(s=e,o=new EventSource(`${e}/events`),l(),window.addEventListener("vercel-toolbar-ready",()=>{l()}))}function l(){let e=_chunkKXA2ARXVcjs.b.call(void 0, );_optionalChain([e, 'optionalAccess', _ => _.isAuthenticated])&&_optionalChain([e, 'access', _2 => _2.setLocalhostEventSource, 'optionalCall', _3 => _3({subscribe:i,fetchLocal:p})])}function i(e,r){if(!o)return()=>{};let n=t=>{try{let c=t.data&&typeof t.data=="string"?JSON.parse(t.data):void 0;c&&r(c)}catch (e2){}};return o.addEventListener(e,n),()=>{_optionalChain([o, 'optionalAccess', _4 => _4.removeEventListener, 'call', _5 => _5(e,n)])}}async function p(e,r){if(!s)return{error:"No toolbar server"};try{let n=await fetch(`${s}${e}`,r?{method:"POST",body:JSON.stringify(r)}:void 0),t=await n.json();return n.ok?{result:t}:{error:t.error}}catch(n){return{error:`${n}`}}}async function m(){let e=await p("/branch");return"result"in e?e.result.branch:void 0}function E(){i("branch-change",e=>{e&&location.reload()})}function N({nonce:e}){return process.env.NODE_ENV!=="development"||_react.useEffect.call(void 0, ()=>(v(process.env.NEXT_PUBLIC_VERCEL_TOOLBAR_SERVER),E(),m().then(r=>{r&&_chunkKXA2ARXVcjs.a.call(void 0, r),_chunkKXA2ARXVcjs.c.call(void 0, {nonce:e})}),()=>{_chunkKXA2ARXVcjs.d.call(void 0, )}),[]),null}exports.LocalhostController = N;
